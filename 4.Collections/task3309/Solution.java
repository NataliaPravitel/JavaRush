package com.javarush.task.task33.task3309;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import java.io.ByteArrayInputStream;
import java.io.StringWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

/* 
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤–Ω—É—Ç—Ä–∏ xml
–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ toXmlWithComment, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É - xml –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ obj.
–í —Å—Ç—Ä–æ–∫–µ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ–≥–æ–º tagName –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å—Ç–∞–≤–ª–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π comment.
–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è obj –≤ xml –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å CDATA —Å –∏—Å–∫–æ–º—ã–º —Ç–µ–≥–æ–º. –ü–µ—Ä–µ–¥ –Ω–∏–º –≤—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –Ω—É–∂–Ω–æ.

–ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞:
toXmlWithComment(firstSecondObject, "second", "it's a comment")

–ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<first>
<!--it's a comment-->
<second>some string</second>
<!--it's a comment-->
<second>some string</second>
<!--it's a comment-->
<second><![CDATA[need CDATA because of < and >]]></second>
<!--it's a comment-->
<second/>
</first>


Requirements:
1. –ú–µ—Ç–æ–¥ toXmlWithComment –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º.
2. –ú–µ—Ç–æ–¥ toXmlWithComment –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º.
3. –ï—Å–ª–∏ –≤–æ –≤—Ö–æ–¥—è—â–µ–º xml –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏—Å–∫–æ–º—ã–π —Ç–µ–≥, —Ç–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ –Ω—É–∂–Ω–æ.
4. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ xml –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–µ–≥–æ–≤ tagName.
5. –ú–µ—Ç–æ–¥ toXmlWithComment –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å xml –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.




1. –°–æ–∑–¥–∞–π—Ç–µ DocumentBuilderFactory, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä, —Å–æ–∑–¥–∞—é—â–∏–π DOM –∏–∑ xml,
–≤—ã—Å—Ç–∞–≤–∏—Ç–µ setCoalescing(true) - —ç—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —É–∑–ª—ã CDATA –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª–∏—Å—å –≤ —Ç–µ–∫—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–ª–∏—Å—å –∫ —Å–º–µ–∂–Ω–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —É–∑–ª—É.
2. –° –µ–≥–æ –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–π—Ç–µ DocumentBuilder, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è DOM –∏–∑ xml.
3. –° –µ–≥–æ –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–π—Ç–µ Document.
4. –î–∞–ª–µ–µ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –º–∞—Ä—à–∞–ª–ª–µ—Ä –∏ —Å –ø–æ–º–æ—â—å—é –≤—Ç–æ—Ä–æ–≥–æ —Å–µ—Ä–∏–∞–ª–∏–∑—É–π—Ç–µ –≤–∞—à –æ–±—ä–µ–∫—Ç –≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤—ã—à–µ –¥–æ–∫—É–º–µ–Ω—Ç.
marshaller.marshal(obj, document)

5. –ü–æ–ª—É—á–∏—Ç–µ –∏–∑ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–æ–∫ –∏—Å–∫–æ–º—ã—Ö —Ç–µ–≥–æ–≤ (NodeList) –ø—Ä–∏ –ø–æ–º–æ—â–∏ –º–µ—Ç–æ–¥–∞ getElementsByTagName(tagName).
6. –ü—Ä–æ–π–¥–∏—Ç–µ—Å—å –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É NodeList –∏ –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–∞–∂–¥—ã–π —É–∑–µ–ª —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:
6.1. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —É–∑–ª–æ–º. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–¥–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —É–∑–µ–ª (getParentNode()),
–≤—ã–∑–≤–∞—Ç—å —É –Ω–µ–≥–æ –º–µ—Ç–æ–¥ insertBefore, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –≤—Å—Ç–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –ø–µ—Ä–µ–¥ –≤–∞—à–∏–º —É–∑–ª–æ–º,
–≤ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–∏ –ø–æ–º–æ—â–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (document.createComment(comment)) –∏ –≤–∞—à —É–∑–µ–ª.
–ü–æ–ª—É—á–∞–µ—Ç—Å—è:
node.getParentNode().insertBefore(document.createComment(comment), node);

6.2. –¢–µ–ø–µ—Ä—å –ø–æ—Å–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É. –î–ª—è —ç—Ç–æ–≥–æ —Ç–æ–∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ insertBefore,
–∫–∞–∫ –≤—ã—à–µ, —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–µ—Ä–µ–¥–∞–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–∏ –ø–æ–º–æ—â–∏ Document —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª "\n". –í–æ—Ç —Ç–∞–∫:
node.getParentNode().insertBefore(document.createTextNode("\n"), node);

7. –°–æ–∑–¥–∞–π—Ç–µ TransformerFactory, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º —Å–æ–∑–¥–∞—Ç—å Transformer.
8. –° –µ–≥–æ –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–π—Ç–µ Transformer, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ–ª—É—á–∏—Ç—å –∏–∑ DOM —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞).
8.1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è Transformer setOutputProperty(OutputKeys.STANDALONE, "no").
–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω—É–∂–µ–Ω –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –¥–µ—Ä–µ–≤–∞.
–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ OutputKeys.STANDALONE –æ–∑–Ω–∞—á–∞–µ—Ç, –±—É–¥–µ—Ç –ª–∏ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–∞—è –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Ö–∑, —á—Ç–æ —ç—Ç–æ), –º—ã —Å—Ç–∞–≤–∏—Ç "no".
9. –î–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤—ã–∑–æ–≤–∏—Ç–µ —É Transformer –º–µ—Ç–æ–¥ transform, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç xml –≤ —Ç–æ,
—á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ. –ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–µ—Ä–µ–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç DOMSource (—è —Ç–∞–∫ –∏ –Ω–µ –ø–æ–Ω—è–ª, –¥–ª—è —á–µ–≥–æ –æ–Ω –Ω—É–∂–µ–Ω.
–û–Ω –∏–º–µ–µ—Ç –≤ —Å–µ–±–µ –∏—Å—Ö–æ–¥–Ω—ã–π DOM –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –Ω–æ —Ö–∑ –∑–∞—á–µ–º), –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ document,
–≤—Ç–æ—Ä—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–µ—Ä–µ–¥–∞–π—Ç–µ StreamResult (—Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è),
–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π StringWriter. –í—Å—ë —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫:
transformer.transform(new DOMSource(document), new StreamResult(writer));

10. –í–µ—Ä–Ω–∏—Ç–µ StringWriter.toString(). üòÅ

*/

public class Solution {
    public static String toXmlWithComment(Object obj, String tagName, String comment)
            throws JAXBException, ParserConfigurationException, TransformerException {
        DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();          //1
        builderFactory.setCoalescing(true);
        DocumentBuilder builder = builderFactory.newDocumentBuilder();                         //2
        Document document = builder.newDocument();                                             //3

        JAXBContext context = JAXBContext.newInstance(obj.getClass());                         //4
        Marshaller marshaller = context.createMarshaller();
        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
        marshaller.marshal(obj, document);

        document.normalizeDocument();                                                          //5

        NodeList nodeList = document.getElementsByTagName(tagName);
        for (int i = 0; i < nodeList.getLength(); i++) {                                       //6
            Node currentNode = nodeList.item(i);
            if (currentNode.getNodeName().equals(tagName)) {
                currentNode.getParentNode().insertBefore(document.createComment(comment),      //6.1
                        currentNode);
                currentNode.getParentNode().insertBefore(document.createTextNode("\n"),  //6.2
                        currentNode);
            }
        }

        TransformerFactory factory = TransformerFactory.newInstance();                         //7
        Transformer transformer = factory.newTransformer();                                    //8
        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
        transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
        transformer.setOutputProperty(OutputKeys.STANDALONE, "no");                      //8.1
        StringWriter writer = new StringWriter();
        transformer.transform(new DOMSource(document), new StreamResult(writer));              //9

        return writer.toString();                                                              //10
    }

    public static void main(String[] args) {

    }
}
